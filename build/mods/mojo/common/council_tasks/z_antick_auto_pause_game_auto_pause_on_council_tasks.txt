# This touches the game files and has potential for conflict if other mods change the same files.

task_integrate_title = {
	position = councillor_chancellor
	task_type = task_type_county
	county_target = realm
	task_progress = task_progress_value
	task_current_value = scope:councillor_liege.chancellor_integrate_title_current_progress

	task_max_value = define:NTitle|DRIFT_PROGRESS_LIMIT

	effect_desc = {
		desc = task_integrate_title_effect_desc
		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					diplomacy > mediocre_skill_rating
				}
				desc = task_integrate_title_nobles_support_integration
			}
			triggered_desc = {
				trigger = {
					diplomacy > mediocre_skill_rating
				}
				desc = task_integrate_title_culture_supports_integration
			}
			triggered_desc = {
				trigger = {
					diplomacy < high_skill_rating
				}
				desc = task_integrate_title_nobles_resist_integration
			}
			triggered_desc = {
				trigger = {
					diplomacy < high_skill_rating
				}
				desc = task_integrate_title_culture_resists_integration
			}
		}
	}

	is_valid_showing_failures_only =  {
		liege = {
			custom_description = {
				text = "is_king_or_emperor"
				highest_held_title_tier >= tier_kingdom
			}
		}
	}

	on_finish_task_county = {
		start_default_task = yes
	}

	potential_county = {
		scope:county = {
			de_jure_drifting_towards = scope:councillor_liege.primary_title
		}
		# Asturias wants to survive and integrate Castille if possible.
		trigger_if = {
			limit = {
				scope:councillor_liege = {
					has_title = title:k_asturias
					NOT = { has_title = title:k_castille }
					any_sub_realm_county = {
						any_this_title_or_de_jure_above = { this = title:k_castille }
					}
				}
			}
			scope:county = {
				any_this_title_or_de_jure_above = { this = title:k_castille }
			}
		}
	}

	progress = {
		value = 0
		add = {
			value = define:NTitle|DRIFT_MONTHLY_PROGRESS_INCREASE
			desc = PASSIVE_INTEGRATION_PROGRESS_VALUE
		}
		add = {
			value = scope:councillor.chancellor_integrate_title_progress_gain
			desc = SCALED_COUNCILLOR_DIPLOMACY_VALUE
		}
		# Relation Bonuses/Penalties
		if = { # Friend
			limit = {
				scope:councillor_liege = {
					has_relation_friend = scope:councillor
					NOT = { has_relation_best_friend = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.chancellor_integrate_title_monthly_increase_friend_bonus
				desc = COUNCILLOR_IS_YOUR_FRIEND
			}
		}
		if = { # Best Friend
			limit = {
				scope:councillor_liege = {
					has_relation_best_friend = scope:councillor
				}
			}
			add = {
				value = scope:councillor.chancellor_integrate_title_monthly_increase_best_friend_bonus
				desc = COUNCILLOR_IS_YOUR_BEST_FRIEND
			}
		}
		if = { # Rival
			limit = {
				scope:councillor_liege = {
					has_relation_rival = scope:councillor
					NOT = { has_relation_nemesis = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.chancellor_integrate_title_monthly_increase_rival_bonus
				desc = COUNCILLOR_IS_YOUR_RIVAL
			}
		}
		if = { # Nemesis
			limit = {
				scope:councillor_liege = {
					has_relation_nemesis = scope:councillor
				}
			}
			add = {
				value = scope:councillor.chancellor_integrate_title_monthly_increase_nemesis_bonus
				desc = COUNCILLOR_IS_YOUR_NEMESIS
			}
		}
		if = {
			limit = {
				councillor_liege_has_erudition_legacy_5_perk = yes
			}
			add = {
				value = scope:councillor.chancellor_integrate_title_erudition_bonus
				desc = INTEGRATE_TITLE_DYNASTY_PERK_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_family_business_bonus = yes
			}
			add = {
				value = scope:councillor.chancellor_integrate_title_family_business_bonus
				desc = FAMILY_BUSINESS_BONUS_VALUE
			}
		}
	}

	monthly_on_action = task_integrate_title_side_effects

	on_monthly_county = {
		if = {
			# Due to code setup, it might not have invalidated yet if this is not the case
			limit = {
				scope:county = {
					de_jure_drifting_towards = scope:councillor_liege.primary_title
				}
			}
			scope:county = {
				change_de_jure_drift_progress = {
					target = scope:councillor_liege.primary_title
					value = scope:councillor.chancellor_integrate_title_progress_gain
				}
			}
		}
	}

	ai_will_do = {
		value = 10 # Prefer this if available

		# Asturias wants to survive and integrate Castille if possible.
		if = {
			limit = {
				scope:councillor_liege = {
					has_title = title:k_asturias
					NOT = { has_title = title:k_castille }
					any_sub_realm_county = {
						any_this_title_or_de_jure_above = { this = title:k_castille }
					}
				}
			}
			add = 100000
		}
	}

	on_cancel_task = {
		scope:councillor_liege = {
			trigger_event = auto_pause_antick.3
		}
	}
}

task_conversion = {
	position = councillor_court_chaplain

	task_type = task_type_county
	county_target = realm
	ai_county_target = realm
	task_progress = task_progress_percentage
	highlight_own_realm = yes

	effect_desc = {
		desc = task_conversion_effect_desc
		triggered_desc = {
			trigger = {
				scope:councillor_liege = {
					any_vassal = {
						has_vassal_stance = minority
					}
				}
			}
			desc = minority_disapproves_conversion_tooltip
		}
		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					learning > mediocre_skill_rating
				}
				desc = task_conversion_opinion_gain
			}
			triggered_desc = {
				trigger = {
					learning > mediocre_skill_rating
				}
				desc = task_conversion_development_gain
			}
			triggered_desc = {
				trigger = {
					learning > mediocre_skill_rating
				}
				desc = task_conversion_levy_gain
			}
			triggered_desc = {
				trigger = {
					learning < high_skill_rating
				}
				desc = task_conversion_resistance_to_conversion
			}
			triggered_desc = {
				trigger = {
					learning < high_skill_rating
				}
				desc = task_conversion_opinion_loss
			}
		}
	}

	progress = {
		value = 0
		#Base conversion speed
		add = {
			value = court_chaplain_conversion_base
			desc = COURT_CHAPLAIN_PROGRESS_BASE
		}
		add = {
			value = scope:councillor.court_chaplain_conversion_monthly_increase
			desc = SCALED_COUNCILLOR_LEARNING_VALUE
		}
		#Fervor of Court Chaplain's Faith
		if = {
			limit = { # Conditional in order to not mess up the preview-tooltip
				exists = scope:county
				exists = scope:councillor.faith	
				exists = scope:county.faith
			}
			add = {
				add = {
					add = scope:councillor.court_chaplain_progress_percentage
					multiply = scope:councillor.faith.fervor
					multiply = convert_faith_fervor_modifier_scale
				}
				subtract = {
					add = scope:councillor.court_chaplain_progress_percentage
					multiply = scope:county.faith.fervor
					multiply = convert_faith_fervor_modifier_scale
				}
				if = {
					limit = {
						scope:councillor_liege = { has_perk = religious_icon_perk }
					}
					min = 0
				}
				desc = COURT_CHAPLAIN_CONVERSION_FERVOR_IMPACT
			}
		}
		add = court_chaplain_conversion_contextual_bonuses
		
		# Faster conversion for certain special doctrines
		if = {
			limit = {
				scope:councillor_liege.faith = { has_doctrine_parameter = adoptionists_attractively_intuitive_theology }
				exists = scope:county
				scope:county.faith.religion = religion:christianity_religion
			}
			add = {
				value = fp2_lyonese_monk_conversion_bonus_actual_value
				desc = fp2_lyonese_monk_faith_conversion_task_desc
			}
		}

		# Development reduces the speed. Should be the last non-multiply modifier applied to avoid negative values
		if = {
			limit = {
				exists = scope:county
				scope:county = {
					development_level > 0
				}
			}
			add = {
				value = scope:county.convert_faith_development_penalty
				desc = STEWARD_PROMOTE_CULTURE_DEVELOPMENT_PENALTY
			}
		}
		
		if = {
			limit = {
				scope:councillor.faith = {
					has_doctrine_parameter = unreformed
				}
			}
			multiply = {
				value = conversion_unreformed_faith_penalty
				desc = COURT_CHAPLAIN_CONVERSION_UNREFORMED_FAITH_PENALTY
			}
		}
		
		# Faster conversion for FP2 Hostility ending, if county is in Iberia and faith was involved
		if = {
			limit = {
				exists = scope:councillor.liege.house
				scope:councillor.liege.house = {
					OR = {
						has_house_modifier = fp2_struggle_hostility_house_faith_modifier
						has_house_modifier = fp2_struggle_hostility_house_combined_modifier
					}
				}
				any_in_global_list = {
					variable = fp2_struggle_ending_faith_list
					this = scope:county.faith
				}
				scope:county.title_province = { geographical_region = world_europe_west_iberia }
			}
			multiply = {
				value = fp2_struggle_hostility_conversion_value
				desc = fp2_struggle_hostility_faith_conversion_task_desc
			}
		}
		# Faster conversion of infidels for FP2 Council Toledo Conversion
		if = {
			limit = {
				scope:councillor.liege = { has_character_modifier = fp2_council_conversion_modifier }
				NOT = { scope:county.religion = scope:councillor.liege.religion }
			}
			multiply = {
				value = council_toledo_conversion_modifier_value
				desc = council_toledo_conversion_task_desc
			}
		}
		# Faster conversion of heretics for FP2 Council Toledo Heresies
		if = {
			limit = {
				scope:councillor.liege = { has_character_modifier = fp2_council_conversion_modifier }
				scope:county.faith = {
					religion = scope:councillor.liege.religion
					fp2_struggle_faith_is_mozarabic_trigger = no
					NOT = { exists = religious_head }
				}
			}
			multiply = {
				value = council_toledo_conversion_modifier_value
				desc = council_toledo_heresies_task_desc
			}
		}
		
		# Conversion speed game rules
		if = {
			limit = {
				has_game_rule = slower_faith_conversion_speed
			}
			multiply = {
				value = slower_game_rule_value
				desc = GAME_RULE_SLOWER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = significantly_slower_faith_conversion_speed
			}
			multiply = {
				value = significantly_slower_game_rule_value
				desc = GAME_RULE_SIGNIFICANTLY_SLOWER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = faster_faith_conversion_speed
			}
			multiply = {
				value = faster_game_rule_value
				desc = GAME_RULE_FASTER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = significantly_faster_faith_conversion_speed
			}
			multiply = {
				value = significantly_faster_game_rule_value
				desc = GAME_RULE_SIGNIFICANTLY_FASTER_REASON
			}
		}
		if = {
			limit = {
				exists = scope:county
				OR = {
					AND = {
						scope:councillor.faith = { has_doctrine_parameter = unreformed_syncretic_actor_opinion_active }
						scope:county.faith = { has_doctrine_parameter = unreformed }
					}
					AND = {
						scope:councillor.faith = { has_doctrine_parameter = christian_syncretic_actor_opinion_active }
						scope:county.faith = { religion_tag = christianity_religion }
					}
					AND = {
						scope:councillor.faith = { has_doctrine_parameter = islamic_syncretic_actor_opinion_active }
						scope:county.faith = { religion_tag = islam_religion }
					}
					AND = {
						scope:councillor.faith = { has_doctrine_parameter = jewish_syncretic_actor_opinion_active }
						scope:county.faith = { religion_tag = judaism_religion }
					}
				}
			}
			min = {
				value = 0.1
				desc = minimum_conversion
			}
		}
	}

	potential_county = { 
		scope:county = {
			NOT = { faith = scope:councillor.faith }
			trigger_if = {
				limit = {
					scope:councillor_liege = { has_variable = hold_court_8120_religion_block }
				}
				custom_tooltip = {
					text = hold_court_8120_conversion_tt
					NOT = { faith = scope:councillor_liege.var:hold_court_8120_religion_block }
				}
			}
			custom_description = {
				text = "is_protected_via_contract_self_or_liege"
				subject = holder
				NAND = { # Vassal Contract forbids meddling by liege
					exists = holder.liege
					holder = {
						OR = {
							AND = {
								liege = scope:councillor_liege
								is_ruler = yes
								is_independent_ruler = no
								vassal_contract_has_flag = religiously_protected
							}
							any_liege_or_above = {
								exists = liege
								liege = scope:councillor_liege
								is_ruler = yes
								is_independent_ruler = no
								vassal_contract_has_flag = religiously_protected
							}
						}
					}
				}
			}
			# Unreformed Pagans do not tend to even try conversion of non-unreformed faiths unless zealous
			trigger_if = {
				limit = {
					scope:councillor_liege = {
						is_ai = yes
						faith = {
							has_doctrine_parameter = unreformed
						}
					}
				}
				OR = {
					scope:councillor_liege = { ai_zeal >= 50 }
					scope:county.faith = { has_doctrine_parameter = unreformed }
					scope:county = { # Always convert holy sites
						any_county_province = {
							barony = {
								is_holy_site_of = scope:councillor_liege.faith
							}
						}
					}
				}
			}
			# Do not convert Righteous faiths, unless disturbingly zealous
			trigger_if = {
				limit = {
					scope:councillor_liege = {
						is_ai = yes
						faith = {
							faith_hostility_level = {
								target = scope:county.faith
								value <= faith_fully_accepted_level
							}
						}
					}
				}
				OR = {
					scope:councillor_liege = { ai_zeal >= 100 }
					scope:county = { # Always convert holy sites
						any_county_province = {
							barony = {
								is_holy_site_of = scope:councillor_liege.faith
							}
						}
					}
				}
			}
			# Converting Astray faiths only happens during certain circumstances
			trigger_if = {
				limit = {
					scope:councillor_liege = {
						is_ai = yes
						faith = {
							faith_hostility_level = {
								target = scope:county.faith
								value <= faith_astray_level
							}
						}
					}
				}
				trigger_if = {
					limit = {
						scope:councillor_liege = {
							has_tolerant_faith_or_culture_trigger = yes
						}
					}
					OR = {
						scope:councillor_liege = { ai_zeal >= 50 }
						scope:county = { county_opinion <= -20 }
						scope:county = { # Always convert holy sites
							any_county_province = {
								barony = {
									is_holy_site_of = scope:councillor_liege.faith
								}
							}
						}
					}
				}
				trigger_else_if = {
					limit = {
						scope:councillor_liege = {
							faith = { has_doctrine = doctrine_pluralism_fundamentalist }
						}
					}
					OR = {
						scope:councillor_liege = { ai_zeal >= 0 }
						scope:county = { county_opinion <= -10 }
						scope:county = { # Always convert holy sites
							any_county_province = {
								barony = {
									is_holy_site_of = scope:councillor_liege.faith
								}
							}
						}
					}
				}
				trigger_else = {
					OR = {
						scope:councillor_liege = { ai_zeal >= 10 }
						scope:county = { county_opinion <= -15 }
						scope:county = { # Always convert holy sites
							any_county_province = {
								barony = {
									is_holy_site_of = scope:councillor_liege.faith
								}
							}
						}
					}
				}
			}
			# Ash'ari in Spain tend to not convert Muwhalladi often
			trigger_if = {
				limit = {
					scope:councillor_liege = {
						is_ai = yes
						faith = faith:ashari
						capital_province = { geographical_region = world_europe_west_iberia }
						scope:county.faith = faith:muwalladi
					}
					scope:county = {
						title_province = { geographical_region = world_europe_west_iberia }
					}
				}
				OR = {
					scope:councillor_liege = { ai_zeal >= 50 }
					scope:county = { county_opinion <= -20 }
					scope:county = { # Always convert holy sites
						any_county_province = {
							barony = {
								is_holy_site_of = scope:councillor_liege.faith
							}
						}
					}
				}
			}
			# If a ruler has Jizya tax, they'll only convert the same *religious family* when ai_zeal is really high, they're converting unreformed pagans, counties in a kingdom with a Holy Site, or others of the same religion
			trigger_if = {
				limit = {
					scope:councillor_liege = {
						is_ai = yes
						faith = {
							has_doctrine = tenet_tax_nonbelievers
						}
					}
					OR = {
						AND = {
							scope:councillor_liege.religion = { is_in_family = rf_pagan }
							scope:county.religion = { is_in_family = rf_pagan }
						}
						AND = {
							scope:councillor_liege.religion = { is_in_family = rf_eastern }
							scope:county.religion = { is_in_family = rf_eastern }
						}
						AND = {
							scope:councillor_liege.religion = { is_in_family = rf_abrahamic }
							scope:county.religion = { is_in_family = rf_abrahamic }
						}
					}
				}
				OR = {
					scope:councillor_liege = { ai_zeal >= 50 }
					scope:county.faith = { has_doctrine_parameter = unreformed }
					scope:councillor_liege.faith = {
						any_holy_site = {
							county = {
								kingdom = scope:county.kingdom
							}
						}
					}
					#scope:county.religion = scope:councillor_liege.religion # Excluded, as tax nonbelievers actually works for different faiths within the same religion
					AND = { # Islamic heartlands, to help fend off encroaching faiths
						scope:councillor_liege.religion = religion:islam_religion
						scope:county.title_province = {
							geographical_region = islamic_heartlands
						}
					}
				}
			}
			# Struggle phases may sometimes restrict targets for involved characters.
			trigger_if = {
				# Give an exception for pre-existing conversions: these can take a while and it's not fair to lose years or decades of progress to a phase change.
				limit = {
					NOT = {
						scope:county = { is_target_of_council_task = task_conversion }
					}
				}
				NOT = {
					scope:councillor_liege = {
						custom_tooltip = {
							text = task_conversion.tt.forbidden.due_to_struggle_phase
							any_character_struggle = {
								involvement = involved
								is_struggle_parameter_active_secondary_county_trigger = {
									PARAMETER = county_conversion_disabled_for_involved_faiths_within_region
									COUNTY = scope:county
								}
							}
						}
					}
				}
			}
		}
	}

	on_finish_task_county = {
		scope:councillor_liege = {
			if = {
				limit = {
					any_vassal = {
						has_vassal_stance = minority
					}
				}
				custom_tooltip = minority_disapproves_conversion
				hidden_effect = {
					every_vassal = {
						limit = {
							has_vassal_stance = minority
						}
						add_opinion = {
							target = scope:councillor_liege
							modifier = minority_disapproves_of_conversion_opinion
						}
					}
				}
			}
		}
		scope:county = {
			set_county_faith = scope:councillor.faith
		}
		if = {
			limit = {
				scope:councillor = {
					has_council_position = councillor_court_chaplain
				}
			}
			scope:councillor = {
				start_default_task = yes
			}
		}
	}

	monthly_on_action = task_convert_side_effects

	ai_will_do = {
		value = 1000 # Always convert if possible

		if = {	#Unless you're a crypto-religionist.
			limit = {
				scope:councillor_liege = { has_variable = false_convert }
			}
			multiply = 0
		}
	}

	on_cancel_task = {
		scope:councillor_liege = {
			trigger_event = auto_pause_antick.3
		}
	}
}

task_increase_control = {
	position = councillor_marshal

	task_type = task_type_county
	county_target = realm
	ai_county_target = domain
	task_progress = task_progress_value
	task_current_value = scope:councillor_liege.marshal_increase_control_current_progress
	task_max_value = 100 # Highest possible county control
	highlight_own_realm = yes
	restart_on_finish = yes # If it "finishes" by removing a corruption modifier, there'll still be control to regain

	effect_desc = {
		desc = task_increase_control_effect_desc
		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					scope:councillor_liege = {
						any_active_accolade = {
							has_accolade_parameter = accolade_increase_control_bonus
						}
					}
				}
				desc = task_increase_control_acclaimed_knight_subdues_peasantry
			}
			triggered_desc = {
				trigger = {
					martial > mediocre_skill_rating
				}
				desc = task_increase_control_increase_opinion
			}
			triggered_desc = {
				trigger = {
					martial > mediocre_skill_rating
				}
				desc = task_increase_control_baron_opinion_increase
			}
			triggered_desc = {
				trigger = {
					martial < high_skill_rating
				}
				desc = task_increase_control_lose_opinion
			}
			triggered_desc = {
				trigger = {
					martial < high_skill_rating
				}
				desc = task_increase_control_lose_control
			}
			triggered_desc = {
				trigger = {
					martial < high_skill_rating
				}
				desc = task_increase_control_baron_opinion_loss
			}
		}
	}
	
	# TOTAL PROGRESS MUST MATCH THE TOTAL OF THE COUNTY MODIFIERS BELOW
		# Add all new progress values to the script value marshal_increase_control_total
		# Note that for Increase Control, the County Modifiers apply the actual values, while progress is for player info only
	progress = {
		value = 0
		add = {
			value = marshal_increase_control_base
			desc = INCREASE_CONTROL_BASE
		}
		add = {
			value = scope:councillor.marshal_increase_county_control_monthly_change
			desc = SCALED_COUNCILLOR_MARTIAL_VALUE
		}
		# Relation Bonuses/Penalties
		if = { # Friend
			limit = {
				scope:councillor_liege = {
					has_relation_friend = scope:councillor
					NOT = { has_relation_best_friend = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.marshal_increase_control_monthly_increase_friend_bonus
				desc = COUNCILLOR_IS_YOUR_FRIEND
			}
		}
		if = { # Best Friend
			limit = {
				scope:councillor_liege = {
					has_relation_best_friend = scope:councillor
				}
			}
			add = {
				value = scope:councillor.marshal_increase_control_monthly_increase_best_friend_bonus
				desc = COUNCILLOR_IS_YOUR_BEST_FRIEND
			}
		}
		if = { # Rival
			limit = {
				scope:councillor_liege = {
					has_relation_rival = scope:councillor
					NOT = { has_relation_nemesis = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.marshal_increase_control_monthly_increase_rival_bonus
				desc = COUNCILLOR_IS_YOUR_RIVAL
			}
		}
		if = { # Nemesis
			limit = {
				scope:councillor_liege = {
					has_relation_nemesis = scope:councillor
				}
			}
			add = {
				value = scope:councillor.marshal_increase_control_monthly_increase_nemesis_bonus
				desc = COUNCILLOR_IS_YOUR_NEMESIS
			}
		}
		if = {
			limit = {
				scope:councillor_liege = { has_perk = strict_organization_perk }
			}
			add = {
				value = scope:councillor.marshal_increase_county_control_perk_bonus_monthly_change
				desc = INCREASE_CONTROL_PERK_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_erudition_legacy_5_perk = yes
			}
			add = {
				value = scope:councillor.marshal_increase_county_control_erudition_bonus_monthly_change
				desc = ERUDITION_DYNASTY_PERK_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_family_business_bonus = yes
			}
			add = {
				value = scope:councillor.marshal_increase_county_control_family_business_bonus_monthly_change
				desc = FAMILY_BUSINESS_BONUS_VALUE
			}
		}
		if = {
			limit = {
				scope:councillor = { has_character_modifier = event_bonus_to_county_control }
			}
			add = {
				value = scope:councillor.marshal_increase_county_control_experience_bonus_monthly_change
				desc = INCREASE_COUNTY_CONTROL_EXPERIENCE_BONUS_VALUE
			}
		}
		if = {
			limit = { exists = scope:county }
			multiply = {
				value = scope:county.county_control_rate_modifier
				desc = MARSHAL_COUNTY_SPEED_MODIFIERS
			}
		}
		if = {
			limit = {
				exists = scope:county
				scope:county = { has_county_modifier = petition_liege_county_control_modifier }
			}
			add = {
				value = scope:councillor.petition_liege_county_convert_modifier_value
				desc = MARSHAL_INCREASE_CONTROL_LOCAL_COUNTY_MODIFIERS
			}
		}
	}

	full_progress = marshal_increase_control_full_progress
	custom_other_loc = MARSHAL_COUNTY_SPEED_OTHER

	potential_county = {
		scope:county = {
			custom_description = {
				text = potential_county_control_task_trigger
				OR = {
					has_county_corruption_trigger = yes
					county_control < full_county_control
				}
			}
			county_control_rate_modifier > 0
		}
	}

	county_modifier = {
		name = marshal_increase_control_modifier
		monthly_county_control_change_add = 1
		scale = marshal_increase_control_total
	}

	on_finish_task_county = {
		if = {
			limit = {
				scope:county = {
					has_county_corruption_trigger = yes
				}
			}
			scope:county = {
				marshal_remove_random_county_corruption_modifier_effect = yes
				change_county_control = -25
			}
		}
	}

	monthly_on_action = task_increase_control_side_effects

	on_monthly_county = {
		random = {
			chance = scope:councillor.marshal_remove_county_corruption_chance
			scope:county = {
				marshal_remove_random_county_corruption_modifier_effect = yes
			}
		}
	}

	ai_will_do = {
		value = 1000 # Highest prio
		if = { # Keep doing Organize levies if you're at war
			limit = {
				is_performing_council_task = task_organize_levies
				scope:councillor_liege = {
					is_at_war = yes
				}
			}
			add = -1000
		}
		if = { # Stop doing this if Organize levies could help you lose less gold during a war
			limit = {
				NOT = {
					is_performing_council_task = task_organize_levies
				}
				scope:councillor_liege = {
					is_at_war = yes
					monthly_character_income < monthly_character_expenses
				}
			}
			add = -1000
		}
	}

	on_cancel_task = {
		scope:councillor_liege = {
			trigger_event = auto_pause_antick.3
		}
	}
}

task_promote_culture = {
	position = councillor_steward

	task_type = task_type_county
	county_target = realm
	ai_county_target = realm
	task_progress = task_progress_percentage
	restart_on_finish = yes
	highlight_own_realm = yes
	
	effect_desc = {
		desc = {
			desc = task_promote_culture_effect_desc
			triggered_desc = {
				trigger = {
					scope:councillor_liege = {
						any_vassal = {
							has_vassal_stance = minority
						}
					}
				}
				desc = minority_disapproves_conversion_tooltip
			}
			triggered_desc = {
				trigger = {
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { culture = scope:councillor_liege.culture }
						}
						NOT = {
							scope:councillor_liege.culture = {
								is_hybrid_culture = yes
								any_parent_culture = {
									this = scope:county.culture
								}
							}
						}
					}
					trigger_else = { always = no }
				}
				desc = task_promote_culture_acceptance_effect_desc
			}
		}
		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					stewardship > mediocre_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_task_efficient_taxation_modifier }
						}
					}
				}
				desc = task_promote_culture_improve_county_opinion
			}
			triggered_desc = {
				trigger = {
					stewardship > mediocre_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_task_efficient_taxation_modifier }
						}
					}
				}
				desc = task_promote_culture_increased_taxes
			}
			triggered_desc = {
				trigger = {
					stewardship > mediocre_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_task_efficient_taxation_modifier }
						}
					}
				}
				desc = task_promote_culture_increased_levies
			}
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_settler_resistance_modifier }
						}
					}
				}
				desc = task_promote_culture_resistance_to_settlers
			}
			triggered_desc = {
				trigger = {
					stewardship < high_skill_rating
					trigger_if = {
						limit = { exists = scope:county }
						scope:county = {
							NOT = { has_county_modifier = steward_settler_resistance_modifier }
						}
					}
				}
				desc = task_promote_culture_resistance_to_administration
			}
		}
	}

	progress = {
		value = 0
		add = {
			value = steward_promote_culture_base
			desc = STEWARD_PROGRESS_BASE
		}
		add = {
			value = scope:councillor.steward_promote_culture_monthly_increase
			desc = SCALED_COUNCILLOR_STEWARDSHIP_VALUE
		}

		add = steward_promote_culture_contextual_bonuses
		
		if = { # Development reduces the speed. Should be the last non-multiply modifier applied to avoid negative values
			limit = {
				exists = scope:county
				scope:county = {
					development_level > 0
				}
			}
			add = {
				value = scope:county.promote_culture_development_penalty
				desc = STEWARD_PROMOTE_CULTURE_DEVELOPMENT_PENALTY
			}
		}
		
		# Conversion speed game rules
		if = {
			limit = {
				has_game_rule = slower_culture_conversion_speed
			}
			multiply = {
				value = slower_game_rule_value
				desc = GAME_RULE_SLOWER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = significantly_slower_culture_conversion_speed
			}
			multiply = {
				value = significantly_slower_game_rule_value
				desc = GAME_RULE_SIGNIFICANTLY_SLOWER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = significantly_faster_culture_conversion_speed
			}
			multiply = {
				value = significantly_faster_game_rule_value
				desc = GAME_RULE_SIGNIFICANTLY_FASTER_REASON
			}
		}
		if = {
			limit = {
				has_game_rule = faster_culture_conversion_speed
			}
			multiply = {
				value = faster_game_rule_value
				desc = GAME_RULE_FASTER_REASON
			}
		}
		# Faster conversion for FP2 Hostility ending, if county is in Iberia and culture was involved
		if = {
			limit = {
				any_in_global_list = {
					variable = fp2_struggle_ending_culture_list
					this = scope:county.culture
				}
				scope:county.title_province = { geographical_region = world_europe_west_iberia }
				scope:councillor.liege.house = {
					OR = {
						has_house_modifier = fp2_struggle_hostility_house_culture_modifier
						has_house_modifier = fp2_struggle_hostility_house_combined_modifier
					}
				}
			}
			multiply = {
				value = fp2_struggle_hostility_conversion_value
				desc = fp2_struggle_hostility_culture_conversion_task_desc
			}
		}
		if = {
			limit = {
				scope:councillor_liege = {
					has_character_modifier = devoted_to_tradition_modifier
				}
			}
			multiply = {
				value = 1.25
				desc = bp2_devoted_to_tradition_modifier_conversion_task_desc
			}
		}

	}

	potential_county = {
		scope:county = {
			NOT = { culture = scope:councillor_liege.culture }
			trigger_if = {
				limit = {
					scope:councillor_liege = { has_variable = hold_court_8130_culture_block }
				}
				custom_tooltip = {
					text = hold_court_8130_conversion_tt
					NOT = { culture = scope:councillor_liege.var:hold_court_8130_culture_block }
				}
			}
		}
		trigger_if = {
			limit = {
				scope:councillor_liege = { is_ai = yes }
			}
			NAND = { # Princes in the HRE tend to not convert each other's cultures
				exists = title:e_hre.holder
				scope:councillor_liege.top_liege = title:e_hre.holder
				OR = {
					scope:councillor_liege.culture = culture:czech
					scope:councillor_liege.culture = { has_cultural_pillar = heritage_central_germanic }
				}
				OR = {
					scope:county.culture = culture:czech
					scope:county.culture = { has_cultural_pillar = heritage_central_germanic }
				}
			}
			OR = {
				NOT = {
					scope:county.culture = {
						cultural_acceptance = { target = scope:councillor_liege.culture value >= 50 }
					}
				}
				scope:councillor_liege.culture = { # All AI's are motivated to spread new Hybrid/Divergent cultures
					OR = {
						is_hybrid_culture = yes
						is_divergent_culture = yes
					}
					NOT = { # Leave the Welsh alone!
						this = culture:anglo_saxon
					}
					any_parent_culture = {
						this = scope:county.culture
					}
				}
				AND = {
					# Scottish rulers should convert counties of 'old' cultures to the new one.
					scope:councillor_liege.culture = culture:scottish
					OR = {
						scope:county.culture = culture:anglo_saxon
						scope:county.culture = culture:gaelic
						scope:county.culture = culture:cumbrian
						scope:county.culture = culture:pictish
					}
				}
				AND = {
					# English rulers should convert counties of 'old' cultures to the new one.
					scope:councillor_liege.culture = culture:english
					OR = {
						scope:county.culture = culture:anglo_saxon
						scope:county.culture = culture:norman
					}
				}
			}
			OR = {
				is_independent_ruler = yes
				scope:councillor_liege.primary_title.tier > tier_county
				scope:councillor_liege.culture = { # All AI's are motivated to spread new Hybrid/Divergent cultures
					OR = {
						is_hybrid_culture = yes
						is_divergent_culture = yes
					}
					any_parent_culture = {
						this = scope:county.culture
					}
				}
				AND = {
					# Scottish rulers should convert counties of 'old' cultures to the new one.
					scope:councillor_liege.culture = culture:scottish
					OR = {
						scope:county.culture = culture:anglo_saxon
						scope:county.culture = culture:gaelic
						scope:county.culture = culture:cumbrian
						scope:county.culture = culture:pictish
					}
				}
				AND = {
					# English rulers should convert counties of 'old' cultures to the new one.
					scope:councillor_liege.culture = culture:english
					OR = {
						scope:county.culture = culture:anglo_saxon
						scope:county.culture = culture:norman
					}
				}
			}
			OR = {
				scope:county = {
					any_neighboring_county = {
						culture = scope:councillor_liege.culture # The AI only wants to convert counties bordering their own culture
					}
				}
				
				AND = {
					NOT = {
						scope:county = {
							any_neighboring_county = {
								culture = scope:councillor_liege.culture # The AI only wants to convert counties bordering their own culture
							}
						}
					}
					OR = {
						#scope:councillor_liege.culture = { # All AI's are motivated to spread new Hybrid cultures
						#	is_hybrid_culture = yes
						#	any_parent_culture = {
						#		this = scope:county.culture
						#	}
						#}
						# Unless they're a nomadic culture converting in the steppe or Asia Minor...
						#AND = { # Deprecated as of the Culture Update, nomadic cultures now try to hybridize aggressively
						#	OR = {
						#		scope:councillor_liege.culture = { has_cultural_pillar = heritage_mongolic }
						#		scope:councillor_liege.culture = { has_cultural_pillar = heritage_turkic }
						#	}
						#	scope:county.title_province = {
						#		OR = {
						#			geographical_region = world_asia_minor
						#			geographical_region = world_steppe
						#		}
						#	}
						#}
						AND = { # The English want to convert the Anglo Saxons and Cumbrians
							scope:councillor_liege.culture = culture:english
							OR = {
								scope:county.culture = culture:anglo_saxon
								scope:county.culture = culture:cumbrian
							}
						}
						AND = { # The Scots want to convert the Anglo Saxons, Cumbrians and Gaelic
							scope:councillor_liege.culture = culture:scottish
							OR = {
								scope:county.culture = culture:anglo_saxon
								scope:county.culture = culture:gaelic
								scope:county.culture = culture:cumbrian
								scope:county.culture = culture:pictish
							}
						}
						AND = { # The Gaels want to convert the Picts and Cumbrians
							scope:councillor_liege.culture = culture:gaelic
							OR = {
								scope:county.culture = culture:cumbrian
								scope:county.culture = culture:pictish
							}
						}
						AND = { # The modern scandinavians want to convert the Norse
							OR = {
								scope:councillor_liege.culture = culture:swedish
								scope:councillor_liege.culture = culture:danish
								scope:councillor_liege.culture = culture:norwegian
							}
							scope:county.culture = culture:norse
						}
						#AND = { # The vikings want to culture convert the Brits, OBSOLETE as of the Hybrid Culture update - they want to create hybrids instead!
						#	OR = {
						#		scope:councillor_liege.culture = culture:norse
						#		scope:councillor_liege.culture = culture:norwegian
						#	}
						#	scope:county = {
						#		any_county_province = {
						#			is_coastal = yes
						#		}
						#	}
						#	OR = {
						#		scope:county.culture = { has_cultural_pillar = heritage_west_germanic }
						#		scope:county.culture = { has_cultural_pillar = heritage_goidelic }
						#		scope:county.culture = { has_cultural_pillar = heritage_brythonic }
						#	}
						#}
						AND = { # The Portuguese should want to convert Suebi
							scope:councillor_liege.culture = culture:portuguese
							scope:county.culture = culture:suebi
						}
						AND = { # The Iberians want to convert Visigothic
							scope:councillor_liege.culture = { has_cultural_pillar = heritage_iberian }
							NOT = { scope:councillor_liege.culture = culture:portuguese }
							scope:county.culture = culture:visigothic
						}
					}
				}
			}
		}
	}

	on_finish_task_county = {
		scope:councillor_liege = {
			if = {
				limit = {	
					NOT = {
						culture = {
							is_hybrid_culture = yes
							any_parent_culture = {
								this = scope:county.culture
							}
						}
					}
				}
				if = {
					limit = {
						is_independent_ruler = no
					}
					add_character_flag = {
						flag = no_ai_culture_convert
						years = 60
					}
				}
				else = {
					add_character_flag = {
						flag = no_ai_culture_convert
						years = 30
					}
				}
			}
		}
		scope:county = {
			if = {
				limit = {
					NOT = {
						scope:councillor_liege.culture = {
							is_hybrid_culture = yes
							any_parent_culture = {
								this = scope:county.culture
							}
						}
					}
				}
				culture = {
					change_cultural_acceptance = {
						target = scope:councillor_liege.culture
						value = culture_conversion_acceptance_impact
						desc = cultural_acceptance_loss_promote_culture
					}
				}
			}
			set_county_culture = scope:councillor_liege.culture
		}
		scope:councillor = {
			start_default_task = yes
		}
	}

	monthly_on_action = task_promote_culture_side_effects

	ai_will_do = {
		value = 0
		if = {
			limit = {
				scope:councillor = {
					is_performing_council_task = task_promote_culture
				}
			}
			add = 10000 # Always keep going if this is already chosen
		}
		else_if = {
			limit = {
				scope:councillor_liege.culture = {
					has_innovation = innovation_desert_tactics #Best way to check if the culture is Outremer
				}
				scope:councillor_liege = {
					gold >= steward_convert_culture_value
				}
			}
			add = 500
		}
		else_if = {
			limit = {
				scope:councillor_liege = {
					OR = {
						gold >= steward_convert_culture_value
						AND = {
							gold > 0
							culture = {
								OR = {
									is_hybrid_culture = yes
									is_divergent_culture = yes
								}
							}
							any_realm_county = {
								culture = {
									save_temporary_scope_as = culture_check
									scope:councillor_liege.culture = {
										any_parent_culture = {
											this = scope:culture_check
										}
									}
								}
							}
						}
					}
				}
			}
			add = 200
		}
		if = {
			limit = {
				scope:councillor_liege = {
					culture = {
						OR = {
							is_hybrid_culture = yes
							is_divergent_culture = yes
						}
					}
					any_sub_realm_county = {
						culture = {
							save_temporary_scope_as = culture_check
							scope:councillor_liege.culture = {
								any_parent_culture = {
									this = scope:culture_check
								}
							}
						}
					}
				}
			}
			add = 200
		}
		# Motivate the AI with an escalation agenda to take this task
		if = {
			limit = {
				has_character_flag = agenda_towards_escalation
			}
			add = 500
		}
		else_if = {
			limit = {
				has_character_flag = agenda_towards_deescalation
			}
			add = -250
		}
		if = {
			# Don't do this too often
			limit = {
				scope:councillor_liege = {
					has_character_flag = no_ai_culture_convert
					NAND = { # ignore it if in Hostility with escalation
						has_character_flag = agenda_towards_escalation
						any_character_struggle = {
							involvement = involved
							is_struggle_phase = struggle_iberia_phase_hostility
						}
					}
				}
			}
			multiply = 0
		}
		if = {
			# Interrupt this task if you're bankrupt
			limit = {
				scope:councillor_liege = {
					gold < -50
				}
			}
			multiply = 0
		}
	}

	on_cancel_task = {
		scope:councillor_liege = {
			trigger_event = auto_pause_antick.3
		}
	}
}
